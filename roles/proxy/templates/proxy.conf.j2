{{ ansible_managed | comment(decoration="# ") }}
{% set secure = site.secure | default(False) %}
{% set https = site.https | default(True) %}
{% if secure and not https %}
{{ assert("Declared secure but no secure website") }}
{% endif %}

server {
    listen 80;
    {% if https %}
    listen 443 ssl {{ "http2" if site.http2 | default(False) else "" }};
    {% endif %}
    server_name {{ site.name | mandatory }} {{ [site.alias | default([])] | flatten | join(" ") }};
    proxy_redirect off;
    {% if https %}
    ssl_certificate /etc/letsencrypt/live/{{ site.name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ site.name }}/privkey.pem;
    {% endif %}
    {% if secure %}
    {# Half a year #}
    add_header Strict-Transport-Security "max-age=15552000; includeSubDomains" always;
    if ($scheme = "http") {
        return 301 https://$host$request_uri;
    }
    {% endif %}

    {% for proxy in [site.proxy] | flatten %}
    {% for option in proxy.options | default([]) %}
    {{ option }};
    {% endfor %}
    location {{ proxy.path | default("/") }} {
        proxy_pass {{ proxy.url | mandatory }};
        proxy_ssl_verify off;
        proxy_http_version 1.1;
        {% if proxy.websocket | default(False) %}
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        {% endif %}
        {% if proxy.preserve_host | default(True) %}
        proxy_set_header Host $host;
        {% endif %}
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Ssl on;
        {% for header in proxy.headers | default([]) %}
        proxy_set_header {{ header }};
        {% endfor %}
        proxy_buffering off;
        proxy_buffer_size 4k;
        client_max_body_size 5g;
        proxy_connect_timeout 300s;
        proxy_read_timeout {{ proxy.timeout | default("300s") }};
        proxy_send_timeout {{ proxy.timeout | default("300s") }};
        send_timeout 300s;
        {% if proxy.limit_rate is defined %}
        limit_rate {{ proxy.limit_rate }};
        {% endif %}
    }
    {% endfor %}
}
